//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_LightTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.LightType));
		L.RegVar("Spot", new LuaCSFunction(get_Spot), null);
		L.RegVar("Directional", new LuaCSFunction(get_Directional), null);
		L.RegVar("Point", new LuaCSFunction(get_Point), null);
		L.RegVar("Area", new LuaCSFunction(get_Area), null);
		L.RegVar("Rectangle", new LuaCSFunction(get_Rectangle), null);
		L.RegVar("Disc", new LuaCSFunction(get_Disc), null);
		L.RegFunction("ToInt", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.ToInt));
		L.RegFunction("IntToEnum", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.IntToEnum));
		L.RegFunction("CompareTo", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.CompareTo));
		L.RegFunction("ToString", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.ToString));
#if !LUAC_5_3
		L.RegEnumEqualFunction("__eq");
#endif
		L.RegFunction("Equals", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.Equals));
		L.RegFunction("__tostring", new LuaCSFunction(EnumTrait<UnityEngine.LightType>.ToString));
		L.EndEnum();
		TypeTraits<UnityEngine.LightType>.Check = EnumTrait<UnityEngine.LightType>.CheckType;
		StackTraits<UnityEngine.LightType>.Push = ToLua.PushData<UnityEngine.LightType>;
		EnumTrait<UnityEngine.LightType>.IntToEnumTransfer = (i) => (UnityEngine.LightType)i;
		EnumTrait<UnityEngine.LightType>.EnumToInt = (e) => (int)e;
	}


	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Spot(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Spot);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Directional(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Directional);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Point(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Point);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Area(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Area);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Rectangle(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Rectangle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Disc(IntPtr L)
	{
		ToLua.PushData(L, UnityEngine.LightType.Disc);
		return 1;
	}
}

