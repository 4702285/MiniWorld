//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_DownloadHandlerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.DownloadHandler), typeof(System.Object));
		L.RegFunction("Dispose", new LuaCSFunction(Dispose));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("isDone", new LuaCSFunction(get_isDone), null);
		L.RegVar("error", new LuaCSFunction(get_error), null);
		L.RegVar("data", new LuaCSFunction(get_data), null);
		L.RegVar("text", new LuaCSFunction(get_text), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Networking.DownloadHandler obj = ToLua.CheckObject<UnityEngine.Networking.DownloadHandler>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isDone(IntPtr L)
	{
		UnityEngine.Networking.DownloadHandler obj = null;
		try
		{
			obj = (UnityEngine.Networking.DownloadHandler)ToLua.ToObject(L, 1);
			bool ret = obj.isDone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, obj, "attempt to index isDone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_error(IntPtr L)
	{
		UnityEngine.Networking.DownloadHandler obj = null;
		try
		{
			obj = (UnityEngine.Networking.DownloadHandler)ToLua.ToObject(L, 1);
			string ret = obj.error;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, obj, "attempt to index error on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_data(IntPtr L)
	{
		UnityEngine.Networking.DownloadHandler obj = null;
		try
		{
			obj = (UnityEngine.Networking.DownloadHandler)ToLua.ToObject(L, 1);
			byte[] ret = obj.data;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, obj, "attempt to index data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text(IntPtr L)
	{
		UnityEngine.Networking.DownloadHandler obj = null;
		try
		{
			obj = (UnityEngine.Networking.DownloadHandler)ToLua.ToObject(L, 1);
			string ret = obj.text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, obj, "attempt to index text on a nil value");
		}
	}
}

